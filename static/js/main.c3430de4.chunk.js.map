{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","json","Promise","reject","Error","statusText","GoodsFilter","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","getButtonName","sortType","All","FirstFive","Red","None","App","useState","setGoods","setSort","isError","setIsError","isLoading","setIsLoading","getGoods","useCallback","promise","loadedGoods","handleClick","className","Object","values","value","sortingOption","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4PAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,GAFC,KAFuB,ECHnC,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAAML,EAASM,YAKxB,GACJ,CAEM,ICVFC,EDUQC,EAAY,WACvB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZmB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEf,KAAKiB,cAAcD,EAAEhB,KAAjC,IACLkB,MAAM,EAAG,EAFD,GAGd,EAEYC,EAAc,WACzB,OAAOjB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMyB,QAAO,SAAAvB,GAAI,MAAmB,QAAfA,EAAKE,KAAT,GAArB,GACd,G,SCpBIa,K,YAAAA,E,iBAAAA,E,8BAAAA,E,kBAAAA,M,KAOL,IAAMS,EAAgB,SAACC,GAA2B,IAAD,EAQ/C,OAP0B,mBACvBV,EAAYW,IAAM,kBADK,cAEvBX,EAAYY,UAAY,sBAFD,cAGvBZ,EAAYa,IAAM,kBAHK,cAIvBb,EAAYc,KAAO,IAJI,GAOEJ,EAC7B,EAEYK,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjC,EAAP,KAAckC,EAAd,KACA,EAAwBD,mBAAsBhB,EAAYc,MAA1D,mBAAOZ,EAAP,KAAagB,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,eAAAtB,EAAA,6DAC3BmB,GAAa,GACbF,GAAW,GAFgB,kBAICK,IAJD,OAInBC,EAJmB,OAMzBT,EAASS,GANgB,gDAQzBN,GAAW,GARc,yBAUzBE,GAAa,GAVY,4EAAD,sDAYzB,IAEGK,EAAcH,uBAAY,SAACd,GAC/B,GAAIR,IAASQ,EAAb,CAIA,OAAQA,GACN,KAAKV,EAAYW,IACfY,EAASjC,GACT,MAEF,KAAKU,EAAYY,UACfW,EAAStB,GACT,MAEF,KAAKD,EAAYa,IACfU,EAAShB,GAObW,EAAQR,EAnBP,CAoBF,GAAE,CAACa,EAAUrB,IAEd,OACE,sBAAK0B,UAAU,MAAf,UACE,uDAECC,OAAOC,OAAO9B,GACZQ,QAAO,SAAAuB,GAAK,OAAIA,CAAJ,IACZ/C,KAAI,SAAAgD,GAAa,OAChB,wBACEC,KAAK,SACL,UAASD,EACTE,QAAS,WACPP,EAAYK,EACb,EALH,SAOGvB,EAAcuB,IARD,IAYnBX,GAAa,8CAEbF,GAAW,sDAEVE,IAAcF,GAAW,cAAC,EAAD,CAAWpC,MAAOA,MAGlD,EC5FDoD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.c3430de4.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(response.statusText),\n        );\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nenum GoodsFilter {\n  None = 'none',\n  All = 'all-button',\n  FirstFive = 'first-five-button',\n  Red = 'red-button',\n}\n\nconst getButtonName = (sortType: GoodsFilter) => {\n  const contentByGoodsFilter = {\n    [GoodsFilter.All]: 'Load all goods',\n    [GoodsFilter.FirstFive]: 'Load 5 first goods',\n    [GoodsFilter.Red]: 'Load red goods',\n    [GoodsFilter.None]: '',\n  };\n\n  return contentByGoodsFilter[sortType];\n};\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [sort, setSort] = useState<GoodsFilter>(GoodsFilter.None);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getGoods = useCallback(async (promise: () => Promise<Good[]>) => {\n    setIsLoading(true);\n    setIsError(false);\n    try {\n      const loadedGoods = await promise();\n\n      setGoods(loadedGoods);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleClick = useCallback((sortType: GoodsFilter) => {\n    if (sort === sortType) {\n      return;\n    }\n\n    switch (sortType) {\n      case GoodsFilter.All:\n        getGoods(getAll);\n        break;\n\n      case GoodsFilter.FirstFive:\n        getGoods(get5First);\n        break;\n\n      case GoodsFilter.Red:\n        getGoods(getRedGoods);\n        break;\n\n      default:\n        break;\n    }\n\n    setSort(sortType);\n  }, [getGoods, sort]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      {Object.values(GoodsFilter)\n        .filter(value => value)\n        .map(sortingOption => (\n          <button\n            type=\"button\"\n            data-cy={sortingOption}\n            onClick={() => {\n              handleClick(sortingOption);\n            }}\n          >\n            {getButtonName(sortingOption)}\n          </button>\n        ))}\n\n      {isLoading && <p>Is Loading...</p>}\n\n      {isError && <p>Something went wrong</p>}\n\n      {!isLoading && !isError && <GoodsList goods={goods} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}